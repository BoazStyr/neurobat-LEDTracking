function [BW,maskedHSVImage] = createMaskFilter(I,hsv)
%createMask  Threshold HSV image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(hsvIM) thresholds image HSV using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original HSV images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 15-Mar-2020
%------------------------------------------------------

% Define thresholds for channel 1 based on histogram settings
channel1Min = hsv(1,1);
channel1Max = hsv(1,2);

% Define thresholds for channel 2 based on histogram settings
channel2Min = hsv(2,1);
channel2Max = hsv(2,2);

% Define thresholds for channel 3 based on histogram settings
channel3Min = hsv(3,1);
channel3Max = hsv(3,2);

% Create mask based on chosen histogram thresholds
if channel1Min < channel1Max
    sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
else
    sliderBW = ( (I(:,:,1) >= channel1Min) | (I(:,:,1) <= channel1Max) ) & (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
end
BW = sliderBW;

if nargout >=2

% Initialize output masked image based on input image.
maskedHSVImage = I;

% Set background pixels where BW is false to zero.
maskedHSVImage(repmat(~BW,[1 1 3])) = 0;
else
    maskedHSVImage = [];
end

end
